source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggpubr")
install.packages("cluster")
install.packages("factoextra")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggpubr")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("ggpubr")
install.packages("ggpubr")
source('~/.active-rstudio-document', echo=TRUE)
install.packages("factoextra")
install.packages("cluster")
source('~/.active-rstudio-document', echo=TRUE)
View(seeds)
fviz_dist(dist.eucl)
source('~/.active-rstudio-document', echo=TRUE)
View(seeds.scaled)
View(seeds)
View(seeds.scaled)
View(seeds.scaled)
View(seeds.scaled)
View(seeds.scaled)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
=
source('~/.active-rstudio-document', echo=TRUE)
seeds$class = factor(seeds$class, levels = c(1,2,3), labels = c("Kama", "Rosa", "Canadian"))
View(seeds)
View(seeds)
source('~/.active-rstudio-document', echo=TRUE)
View(seeds)
View(seeds)
View(seeds.scaled)
View(seeds.scaled)
columns = c("area", "perimeter", "compactness", "length", "width", "AC", "lengthGroove", "class")
url = "https://www.dl.dropboxusercontent.com/s/wrexlo5im3g5ioi/seeds_dataset.csv"
seeds = read.csv(url, header = F, sep=",", col.names = columns)
View(seeds)
seeds$class = factor(seeds$class, levels = c(1,2,3), labels = c("Kama", "Rosa", "Canadian"))
seeds.scaled = scale(seeds[c(1:7)])
View(seeds.scaled)
dist.eucl = dist(seeds.scaled, method = "euclidean")
fviz_dist(dist.eucl)
fviz_nbclust(seeds.scaled, kmeans, method = "wss")
fviz_nbclust(seeds.scaled, kmeans, method = "gap_stat")
fviz_nbclust(seeds.scaled, kmeans, method = "silhouette")
fviz_nbclust(seeds.scaled, kmeans, method = "silhouette")
fviz_nbclust(seeds.scaled, kmeans, method = "gap_stat")
fviz_nbclust(seeds.scaled, kmeans, method = "wss")
fviz_nbclust(seeds.scaled, kmeans, method = "silhouette")
fviz_nbclust(seeds.scaled, kmeans, method = "gap_stat")
fviz_cluster(km.res, data = seeds.scaled, palette = "jco", ggtheme = theme_minimal())
km.res = kmeans(seeds.scaled, 3, nstart = 25)
fviz_cluster(km.res, data = seeds.scaled, palette = "jco", ggtheme = theme_minimal())
View(km.res)
dist.eucl
dist.eucl
print(dist.eucl)
print(dist.eucl)
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
daisy()
daisy(a)
source('~/.active-rstudio-document', echo=TRUE)
daisy(seeds)
matris.diss <- daisy(seeds)
View(seeds)
View(seeds)
# Se obtiene la data de heart disease desde https://archive.ics.uci.edu
processed.cleveland = read.table("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/processed.cleveland.data", dec=".", sep=",")
# Se cambian los datos de la columna ca y thal con valor "?" a NA
processed.cleveland$ca[processed.cleveland$ca=="?"]<-NA;
processed.cleveland$thal[processed.cleveland$thal=="?"]<-NA;
# Se borran los datos con NA's
processed.cleveland <- processed.cleveland[complete.cases(processed.cleveland), ]
# Duplican los datos para tener version factor y numerico
processed.cleveland.num <- processed.cleveland
# Se cambian los valores numericos a valores cualitativos
processed.cleveland$sex[processed.cleveland$sex==0]<-"female";
processed.cleveland$sex[processed.cleveland$sex==1]<-"male";
processed.cleveland$cp[processed.cleveland$cp==1] <- "typical angina";
processed.cleveland$cp[processed.cleveland$cp==2] <- "atypical angina";
processed.cleveland$cp[processed.cleveland$cp==3] <- "non-anginal pain";
processed.cleveland$cp[processed.cleveland$cp==4] <- "asymptomatic";
processed.cleveland$fbs[processed.cleveland$fbs==0] <- "fbs < 120 mg/dl";
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
View(processed.cleveland)
dummyvar
dummyvar()
download.packages("caret")
install.packages("caret")
do.call(cbind,
lapply(processed.cleveland, function(x) table(sequence(nrow(processed.cleveland)),
factor(x, levels = allLevels))))
allLevels <- levels(factor(unlist(processed.cleveland)))
do.call(cbind,
lapply(processed.cleveland, function(x) table(sequence(nrow(processed.cleveland)),
factor(x, levels = allLevels))))
allLevels <- levels(factor(unlist(processed.cleveland)))
do.call(cbind,
lapply(processed.cleveland, function(x) table(sequence(nrow(processed.cleveland)),
factor(x, levels = allLevels))))
View(processed.cleveland)
View(processed.cleveland)
cbind(with(processed.cleveland, model.matrix(~ v1 + 0)), with(processed.cleveland, model.matrix(~ v2 + 0)))
cbind(with(processed.cleveland, model.matrix(~ v1 + 0)), with(processed.cleveland, model.matrix(~ v2 + 0)))
cbind(with(processed.cleveland, model.matrix(~ processed.cleveland$sex + 0)))
View(processed.cleveland)
View(processed.cleveland)
cbind(with(processed.cleveland, model.matrix(~ sex. + 0)))
cbind(with(processed.cleveland, model.matrix(~ processed.cleveland$sex + 0)))
as.data.frame(cbind(with(processed.cleveland, model.matrix(~ processed.cleveland$sex + 0))))
sex <- as.data.frame(cbind(with(processed.cleveland, model.matrix(~ processed.cleveland$sex + 0))))
View(sex)
View(sex)
processed.cleveland.append(sex);
processed.cleveland$sex.male, processed.cleveland$sex.female  <- sex;
processed.cleveland$sex.male  <- sex;
View(processed.cleveland)
View(processed.cleveland)
View(processed.cleveland)
processed.cleveland  <- sex;
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
View(processed.cleveland)
View(processed.cleveland)
processed.cleveland$  <- sex;
sex <- as.data.frame(cbind("asd",with(processed.cleveland, model.matrix(~ processed.cleveland$sex + 0))))
View(sex)
sex <- as.data.frame(cbind(with(processed.clevelanda, model.matrix(~ processed.cleveland$sex + 0))))
sex <- as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0))))
View(sex)
sex <- as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex. + 0))))
sex <- as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + "." + 0))))
sex <- as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0))))
View(sex)
View(sex)
View(processed.cleveland)
View(processed.cleveland)
processed.cleveland <- cbind(sex);
processed.cleveland <- cbind(processed.cleveland, sex);
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
View(processed.cleveland)
processed.cleveland.bin <- cbind(age, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ cp + 0)))))
processed.cleveland.bin <- cbind(processed.cleveland.age, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ cp + 0)))))
processed.cleveland.bin <- cbind(processed.cleveland$age, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ cp + 0)))))
View(processed.cleveland.bin)
View(processed.cleveland.bin)
processed.cleveland.bin <- cbind(age = processed.cleveland$age, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ cp + 0)))))
processed.cleveland.bin <- cbind(age = processed.cleveland$age, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ cp + 0)))), trestps = processed.cleveland$trestbps,  chol = processed.cleveland$chol, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ fbs + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ restecg + 0)))), thalach = processed.cleveland$thalach, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ exang + 0)))), oldpeak = processed.cleveland$oldpeak, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ slope + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ ca + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ thal + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ num + 0)))));
View(processed.cleveland.bin)
View(processed.cleveland.bin)
processed.cleveland = scale(processed.cleveland[c(0:1)])
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
View(processed.cleveland.bin)
View(processed.cleveland.norm)
View(processed.cleveland.norm)
processed.cleveland.norm = scale(processed.cleveland[c(0:5)])
processed.cleveland.norm = scale(processed.cleveland[c(0:2)])
processed.cleveland.norm = scale(processed.cleveland[c(0:1)])
source('~/.active-rstudio-document', echo=TRUE)
View(seeds)
View(seeds.scaled)
normalize()
scale()
scale(processed.cleveland$age)
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
# Primero se binarizan todas las variables categoricas.
processed.cleveland.bin <- cbind(age = scale(processed.cleveland$age), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ sex + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ cp + 0)))), trestps = processed.cleveland$trestbps,  chol = processed.cleveland$chol, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ fbs + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ restecg + 0)))), thalach = processed.cleveland$thalach, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ exang + 0)))), oldpeak = processed.cleveland$oldpeak, as.data.frame(cbind(with(processed.cleveland, model.matrix(~ slope + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ ca + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ thal + 0)))), as.data.frame(cbind(with(processed.cleveland, model.matrix(~ num + 0)))));
daisy()
daisy(processed.cleveland.bin, metric = "euclidean", type = list(asymm = 1))
daisy(processed.cleveland.bin, metric = "euclidean", type = list(asymm = 2))
daisy(processed.cleveland.bin, metric = "gower", type = list(asymm = 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30))
daisy(processed.cleveland.bin, metric = "gower", type = list(asymm = c(3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)))
daisy(processed.cleveland.bin, metric = "gower", type = list(asymm = c(2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)))
matriz.dis = daisy(processed.cleveland.bin, metric = "gower", type = list(asymm = c(2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)))
pam(matriz.dis)
pam(matriz.dis, 4)
plot(pam(matriz.dis, 4))
clust = pam(matriz.dis, 4)
fviz_cluster(km.res, data = seeds.scaled, palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clist, data = processed.cleveland.bin, palette = "jco", ggtheme = theme_minimal())
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
fviz_cluster(clist, data = processed.cleveland.bin, palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, data = processed.cleveland.bin, palette = "jco", ggtheme = theme_minimal())
clust = pam(matriz.dis, 2)
fviz_cluster(clust, data = processed.cleveland.bin, palette = "jco", ggtheme = theme_minimal())
View(clust)
View(clust)
source('~/.active-rstudio-document', echo=TRUE)
fviz_cluster(clust, data = processed.cleveland.bin, palette = "jco", ggtheme = theme_minimal())
View(seeds.scaled)
View(seeds.scaled)
View(processed.cleveland.bin)
View(processed.cleveland.bin)
type(processed.cleveland)
class(seeds.scaled)
class(processed.cleveland)
fviz_cluster(clust, data = data.matrix(processed.cleveland.bin), palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, data = data.matrix(processed.cleveland.bin), palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, data = data.matrix(processed.cleveland.bin), palette = "jco", ggtheme = theme_minimal())
data.matrix(processed.cleveland.bin)
class(data.matrix(processed.cleveland.bin))
fviz_silhouette(clust)
eclust(processed.cleveland.bin,FUNcluster="pam", k=3,hc_metric = "euclidean")
eclust(processed.cleveland.bin,FUNcluster="pam", k=2,hc_metric = "euclidean")
eclust(processed.cleveland.bin,FUNcluster="pam", k=2,hc_metric = "gower")
eclust(clust,FUNcluster="pam", k=2,hc_metric = "gower")
fviz_cluster(clust, palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust.res, palette = "jco", ggtheme = theme_minimal())
clust = pam(matriz.dis, 2)
fviz_cluster(clust.res, palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust.res, ellipse.type = "norm", palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, ellipse.type = "norm", palette = "jco", ggtheme = theme_minimal())
fviz_silhouette(clust)
fviz_cluster(clust, ellipse.type = "norm", palette = "jco", ggtheme = theme_minimal())
View(clust)
clust = pam(matriz.dis, 3)
fviz_cluster(clust, ellipse.type = "norm", palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, palette = "jco", ggtheme = theme_minimal())
clust = pam(matriz.dis, 3, diss = T)
fviz_cluster(clust, palette = "jco", ggtheme = theme_minimal())
# Se procede a crear una matriz de dissimilitud
matriz.dis = daisy(processed.cleveland.bin, metric = "gower", type = list(asymm = c(2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30)))
clust = pam(matriz.dis, 3, diss = T)
fviz_cluster(clust, data = data.matrix(processed.cleveland.bin), palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, data = NULL palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, data = NULL, palette = "jco", ggtheme = theme_minimal())
View(clust)
View(clust)
clust$data = processed.cleveland.bin
fviz_cluster(clust, data = NULL, palette = "jco", ggtheme = theme_minimal())
fviz_cluster(clust, palette = "jco", ggtheme = theme_minimal())
fviz_nbclust(processed.cleveland.bin, kmeans, method = "silhouette")
clust = pam(matriz.dis, 3, diss = T)
clust = pam(matriz.dis, 2, diss = T)
#Se grafica el cluster
fviz_cluster(clust, data = data.matrix(processed.cleveland.bin), palette = "jco", ggtheme = theme_minimal())
clust = pam(matriz.dis, 2, diss = T)
clust$data = processed.cleveland.bin
#Se grafica el cluster
fviz_cluster(clust, palette = "jco", ggtheme = theme_minimal())
source('/home/chunzen/Desktop/Lab_Analisis/Laboratorio_analisis/Lab2_analisis/Lab2.R', echo=TRUE)
